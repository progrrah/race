cmake_minimum_required(VERSION 3.21)
project(race VERSION 0.1.0 LANGUAGES C CXX)

IF(WIN32)
    find_package(OpenGL REQUIRED)
    find_package(GLUT REQUIRED)

    add_executable(race src/main.cpp)
    add_library(race_lib STATIC src/library.cpp headers/library.hpp)
    add_library(interLib STATIC src/interaction.cpp headers/interaction.hpp)
    add_library(mainLib STATIC src/initLibrary.cpp headers/initLibrary.hpp)

    target_include_directories(race PUBLIC headers)
    target_include_directories(race_lib PUBLIC headers)
    target_include_directories(interLib PUBLIC headers)
    target_include_directories(mainLib PUBLIC headers)

    target_link_libraries(race_lib PUBLIC OpenGL::GL GLUT::GLUT)
    target_link_libraries(interLib PUBLIC OpenGL::GL GLUT::GLUT)
    target_link_libraries(mainLib PUBLIC OpenGL::GL GLUT::GLUT)
    target_link_libraries(race PUBLIC mainLib race_lib interLib OpenGL::GL GLUT::GLUT)

ELSE()
    find_package(OpenGL REQUIRED)
    find_package(GLUT REQUIRED)
    find_package(GLEW REQUIRED)
    find_package(X11 REQUIRED)

    add_executable(race src/main.cpp)
    add_library(race_lib STATIC src/library.cpp headers/library.hpp)
    add_library(interLib STATIC src/interaction.cpp headers/interaction.hpp)
    add_library(mainLib STATIC src/initLibrary.cpp headers/initLibrary.hpp)

    # add_library(musicLib STATIC src/musicMoment.cpp headers/musicMoment.hpp)
    target_include_directories(race PUBLIC headers)
    target_include_directories(race_lib PUBLIC headers)
    target_include_directories(interLib PUBLIC headers)
    target_include_directories(mainLib PUBLIC headers)

    # target_include_directories(musicLib PUBLIC headers)
    target_link_libraries(race_lib PUBLIC OpenGL::GL GLUT::GLUT GLEW::GLEW X11::X11)
    target_link_libraries(interLib PUBLIC OpenGL::GL GLUT::GLUT GLEW::GLEW X11::X11)
    target_link_libraries(mainLib PUBLIC OpenGL::GL GLUT::GLUT GLEW::GLEW X11::X11)
    target_link_libraries(race PUBLIC mainLib race_lib interLib OpenGL::GL GLUT::GLUT GLEW::GLEW X11::X11)
ENDIF()